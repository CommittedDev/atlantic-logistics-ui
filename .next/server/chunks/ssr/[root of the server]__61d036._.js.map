{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/helpers/token-helper.ts"],"sourcesContent":["const setAccessToken = (accessToken: string | null) => {\n  if (accessToken) {\n    localStorage.setItem('accessToken', accessToken);\n  } else {\n    localStorage.removeItem('accessToken');\n  }\n};\n\nconst getAccessToken = () => localStorage.getItem('accessToken');\n\nexport {setAccessToken, getAccessToken};\n"],"names":[],"mappings":";;;;AAAA,MAAM,iBAAiB,CAAC;IACtB,IAAI,aAAa;QACf,aAAa,OAAO,CAAC,eAAe;IACtC,OAAO;QACL,aAAa,UAAU,CAAC;IAC1B;AACF;AAEA,MAAM,iBAAiB,IAAM,aAAa,OAAO,CAAC"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/api/api-client.ts"],"sourcesContent":["import {getAccessToken} from '@/helpers/token-helper';\nimport axios from 'axios';\n\nconst baseURL = 'http://localhost:4000/';\n\nconst ApiClient = axios.create({\n  baseURL,\n  timeout: 30000,\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': '*',\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    cache: 'no-cache',\n    mode: 'cors',\n    redirect: 'follow',\n    referrer: 'no-referrer',\n    withCredentials: true,\n  },\n});\n\nApiClient.interceptors.request.use(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async (config: any) => {\n    const accessToken = await getAccessToken();\n    const headers = {\n      ...config.headers,\n      Authorization: `Bearer ${accessToken}`,\n      // 'x-refresh-token': refreshToken,\n    };\n    return {...config, headers};\n  },\n  error => {\n    Promise.reject(error);\n  },\n);\n\nexport default ApiClient;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,UAAU;AAEhB,MAAM,YAAY,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC7B;IACA,SAAS;IACT,SAAS;QACP,+BAA+B;QAC/B,gCAAgC;QAChC,gBAAgB;QAChB,QAAQ;QACR,OAAO;QACP,MAAM;QACN,UAAU;QACV,UAAU;QACV,iBAAiB;IACnB;AACF;AAEA,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,8DAA8D;AAC9D,OAAO;IACL,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;IACvC,MAAM,UAAU;QACd,GAAG,OAAO,OAAO;QACjB,eAAe,CAAC,OAAO,EAAE,aAAa;IAExC;IACA,OAAO;QAAC,GAAG,MAAM;QAAE;IAAO;AAC5B,GACA,CAAA;IACE,QAAQ,MAAM,CAAC;AACjB;uCAGa"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/api/services/auth-service.ts"],"sourcesContent":["import {SignInPayload} from '@/interface/auth';\nimport apiClient from '../api-client';\n\nexport const signIn = async (data: SignInPayload) => {\n  try {\n    return Promise.resolve(await apiClient.post('https://dummyjson.com/auth/login', data));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n"],"names":[],"mappings":";;;AACA;;AAEO,MAAM,SAAS,OAAO;IAC3B,IAAI;QACF,OAAO,QAAQ,OAAO,CAAC,MAAM,2HAAA,CAAA,UAAS,CAAC,IAAI,CAAC,oCAAoC;IAClF,EAAE,OAAO,OAAO;QACd,OAAO,QAAQ,MAAM,CAAC;IACxB;AACF"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/redux/reducers/auth-slice.ts"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport * as authService from '@/api/services/auth-service';\nimport {AppDispatch} from '../store';\nimport {AppRouterInstance} from 'next/dist/shared/lib/app-router-context.shared-runtime';\nimport {setAccessToken} from '@/helpers/token-helper';\n\nconst REDUCER_DOMAIN = 'auth';\n\nexport const authSlice = createSlice({\n  name: REDUCER_DOMAIN,\n  initialState: {\n    isLoggedIn: false,\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    setIsLoggedIn: (state, action) => {\n      state.isLoggedIn = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const SignIn = (username: string, password: string, router: AppRouterInstance) => async (dispatch: AppDispatch) => {\n  dispatch(setLoading(true));\n  try {\n    const response = await authService.signIn({username, password});\n\n    if (response.status === 200 && response.data.accessToken) {\n      setAccessToken(response.data.accessToken);\n      dispatch(setIsLoggedIn(true));\n      dispatch(setLoading(false));\n      router.push('/dashboard');\n    } else throw new Error('Invalid credentials');\n  } catch (error) {\n    dispatch(setError(error));\n    dispatch(setLoading(false));\n  }\n};\n\nexport const SignOut = (router: AppRouterInstance) => async (dispatch: AppDispatch) => {\n  setAccessToken('');\n  dispatch(setIsLoggedIn(false));\n  router.push('/auth/sign-in');\n};\n\nexport const {setIsLoggedIn, setLoading, setError} = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"names":[],"mappings":";;;;;;;;;AACA;AAGA;AAJA;;;;AAMA,MAAM,iBAAiB;AAEhB,MAAM,YAAY,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IACnC,MAAM;IACN,cAAc;QACZ,YAAY;QACZ,SAAS;QACT,OAAO;IACT;IACA,UAAU;QACR,eAAe,CAAC,OAAO;YACrB,MAAM,UAAU,GAAG,OAAO,OAAO;QACnC;QACA,YAAY,CAAC,OAAO;YAClB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC;QACA,UAAU,CAAC,OAAO;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;IACF;AACF;AAEO,MAAM,SAAS,CAAC,UAAkB,UAAkB,SAA8B,OAAO;QAC9F,SAAS,WAAW;QACpB,IAAI;YACF,MAAM,WAAW,MAAM,0IAAY,MAAM,CAAC;gBAAC;gBAAU;YAAQ;YAE7D,IAAI,SAAS,MAAM,KAAK,OAAO,SAAS,IAAI,CAAC,WAAW,EAAE;gBACxD,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,IAAI,CAAC,WAAW;gBACxC,SAAS,cAAc;gBACvB,SAAS,WAAW;gBACpB,OAAO,IAAI,CAAC;YACd,OAAO,MAAM,IAAI,MAAM;QACzB,EAAE,OAAO,OAAO;YACd,SAAS,SAAS;YAClB,SAAS,WAAW;QACtB;IACF;AAEO,MAAM,UAAU,CAAC,SAA8B,OAAO;QAC3D,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE;QACf,SAAS,cAAc;QACvB,OAAO,IAAI,CAAC;IACd;AAEO,MAAM,EAAC,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAC,GAAG,UAAU,OAAO;uCAEvD,UAAU,OAAO"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/redux/reducers/common-slice.ts"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nconst REDUCER_DOMAIN = 'common';\n\nexport const commonSlice = createSlice({\n  name: REDUCER_DOMAIN,\n  initialState: {\n    loading: false,\n  },\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n  },\n});\n\nexport const {setLoading} = commonSlice.actions;\n\nexport default commonSlice.reducer;\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,iBAAiB;AAEhB,MAAM,cAAc,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IACrC,MAAM;IACN,cAAc;QACZ,SAAS;IACX;IACA,UAAU;QACR,YAAY,CAAC,OAAO;YAClB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC;IACF;AACF;AAEO,MAAM,EAAC,UAAU,EAAC,GAAG,YAAY,OAAO;uCAEhC,YAAY,OAAO"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/api/services/countries-service.ts"],"sourcesContent":["import apiClient from '../api-client';\n\nexport const getCountries = async () => {\n  try {\n    return Promise.resolve(await apiClient.get('https://restcountries.com/v3.1/all'));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,eAAe;IAC1B,IAAI;QACF,OAAO,QAAQ,OAAO,CAAC,MAAM,2HAAA,CAAA,UAAS,CAAC,GAAG,CAAC;IAC7C,EAAE,OAAO,OAAO;QACd,OAAO,QAAQ,MAAM,CAAC;IACxB;AACF"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/redux/reducers/countries-slice.ts"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport * as countriesService from '@/api/services/countries-service';\nimport {AppDispatch} from '../store';\nimport {setLoading as setCommonLoading} from './common-slice';\n\nconst REDUCER_DOMAIN = 'countries';\n\nexport const countriesSlice = createSlice({\n  name: REDUCER_DOMAIN,\n  initialState: {\n    data: null,\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const FetchCountries = () => async (dispatch: AppDispatch) => {\n  dispatch(setCommonLoading(true));\n  dispatch(setLoading(true));\n  try {\n    const response = await countriesService.getCountries();\n\n    if (response.status === 200 && response.data) {\n      dispatch(setLoading(false));\n      dispatch(setCommonLoading(false));\n\n      dispatch(setData(response.data));\n    } else throw new Error('Something Went Wrong!');\n  } catch (error) {\n    console.error(error)\n    // dispatch(setError(error));\n    dispatch(setLoading(false));\n    dispatch(setCommonLoading(false));\n  }\n};\n\nexport const {setData, setLoading, setError} = countriesSlice.actions;\n\nexport default countriesSlice.reducer;\n"],"names":[],"mappings":";;;;;;;;AACA;AAEA;AAHA;;;;AAKA,MAAM,iBAAiB;AAEhB,MAAM,iBAAiB,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IACxC,MAAM;IACN,cAAc;QACZ,MAAM;QACN,SAAS;QACT,OAAO;IACT;IACA,UAAU;QACR,SAAS,CAAC,OAAO;YACf,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B;QACA,YAAY,CAAC,OAAO;YAClB,MAAM,OAAO,GAAG,OAAO,OAAO;QAChC;QACA,UAAU,CAAC,OAAO;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAC9B;IACF;AACF;AAEO,MAAM,iBAAiB,IAAM,OAAO;QACzC,SAAS,CAAA,GAAA,2IAAA,CAAA,aAAgB,AAAD,EAAE;QAC1B,SAAS,WAAW;QACpB,IAAI;YACF,MAAM,WAAW,MAAM,+IAAiB,YAAY;YAEpD,IAAI,SAAS,MAAM,KAAK,OAAO,SAAS,IAAI,EAAE;gBAC5C,SAAS,WAAW;gBACpB,SAAS,CAAA,GAAA,2IAAA,CAAA,aAAgB,AAAD,EAAE;gBAE1B,SAAS,QAAQ,SAAS,IAAI;YAChC,OAAO,MAAM,IAAI,MAAM;QACzB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC;YACd,6BAA6B;YAC7B,SAAS,WAAW;YACpB,SAAS,CAAA,GAAA,2IAAA,CAAA,aAAgB,AAAD,EAAE;QAC5B;IACF;AAEO,MAAM,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAC,GAAG,eAAe,OAAO;uCAEtD,eAAe,OAAO"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/redux/store.ts"],"sourcesContent":["import {combineReducers, configureStore} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport {persistReducer} from 'redux-persist';\nimport {persistStore} from 'redux-persist';\n\nimport authReducer from './reducers/auth-slice';\nimport commonReducer from './reducers/common-slice';\nimport countriesReducer from './reducers/countries-slice';\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n  blacklist: [], //reducer names listed here will not be persisted\n  whitelist: ['auth'],\n  debug: true,\n};\n\nconst rootReducer = combineReducers({\n  common: commonReducer,\n  auth: authReducer,\n  countries: countriesReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\n      },\n    }).concat(logger),\n});\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAGA;AACA;AACA;AARA;AAGA;AAHA;AAIA;;;;;;;;;AAMA,MAAM,gBAAgB;IACpB,KAAK;IACL,SAAS,6JAAA,CAAA,UAAc;IACvB,WAAW,EAAE;IACb,WAAW;QAAC;KAAO;IACnB,OAAO;AACT;AAEA,MAAM,cAAc,CAAA,GAAA,uIAAA,CAAA,kBAAe,AAAD,EAAE;IAClC,QAAQ,2IAAA,CAAA,UAAa;IACrB,MAAM,yIAAA,CAAA,UAAW;IACjB,WAAW,8IAAA,CAAA,UAAgB;AAC7B;AAEA,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,iBAAc,AAAD,EAAE,eAAe;AAEvD,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAC3B,SAAS;IACT,YAAY,CAAA,uBACV,qBAAqB;YACnB,mBAAmB;gBACjB,gBAAgB;oBAAC;oBAAmB;iBAAoB;YAC1D;QACF,GAAG,MAAM,CAAC,0JAAA,CAAA,UAAM;AACpB;AAEO,MAAM,YAAY,CAAA,GAAA,iMAAA,CAAA,eAAY,AAAD,EAAE;uCAMvB"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/redux/PersistProvider.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport {persistor} from './store';\n\nimport {ReactNode} from 'react';\n\nconst PersistProvider = ({children}: {children: ReactNode}) => {\n  return (\n    <PersistGate loading={null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  );\n};\n\nexport default PersistProvider;\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAQA,MAAM,kBAAkB,CAAC,EAAC,QAAQ,EAAwB;IACxD,qBACE,8OAAC,8JAAA,CAAA,cAAW;QAAC,SAAS;QAAM,WAAW,qHAAA,CAAA,YAAS;kBAC7C;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/redux/ReduxProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport { ReactNode } from \"react\";\n\nconst ReduxProvider = ({ children }: { children: ReactNode }) => {\n  return <Provider store={store}>{children}</Provider>;\n};\n\nexport default ReduxProvider;\n"],"names":[],"mappings":";;;;AAIA;AADA;AAHA;;;;AAQA,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAA2B;IAC1D,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,qHAAA,CAAA,UAAK;kBAAG;;;;;;AAClC;uCAEe"}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/roboto_20989dc1.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"roboto_20989dc1-module__WZGeGG__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/roboto_20989dc1.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22theme.ts%22,%22import%22:%22Roboto%22,%22arguments%22:[{%22weight%22:[%22300%22,%22400%22,%22500%22,%22700%22],%22subsets%22:[%22latin%22],%22display%22:%22swap%22}],%22variableName%22:%22roboto%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Roboto', 'Roboto Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,yJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,yJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,yJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":["file://D%3A/atlantis-logistics-prod/src/theme/theme.ts"],"sourcesContent":["'use client';\n\nimport {createTheme} from '@mui/material/styles';\nimport {Roboto} from 'next/font/google';\n\nconst roboto = Roboto({\n  weight: ['300', '400', '500', '700'],\n  subsets: ['latin'],\n  display: 'swap',\n});\n\nconst theme = createTheme({\n  colorSchemes: {light: true, dark: true},\n  cssVariables: {\n    colorSchemeSelector: 'class',\n  },\n  typography: {\n    fontFamily: roboto.style.fontFamily,\n  },\n  components: {\n    MuiAlert: {\n      styleOverrides: {\n        root: {\n          variants: [\n            {\n              props: {severity: 'info'},\n              style: {\n                backgroundColor: '#60a5fa',\n              },\n            },\n          ],\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAWA,MAAM,QAAQ,CAAA,GAAA,oNAAA,CAAA,cAAW,AAAD,EAAE;IACxB,cAAc;QAAC,OAAO;QAAM,MAAM;IAAI;IACtC,cAAc;QACZ,qBAAqB;IACvB;IACA,YAAY;QACV,YAAY,0IAAA,CAAA,UAAM,CAAC,KAAK,CAAC,UAAU;IACrC;IACA,YAAY;QACV,UAAU;YACR,gBAAgB;gBACd,MAAM;oBACJ,UAAU;wBACR;4BACE,OAAO;gCAAC,UAAU;4BAAM;4BACxB,OAAO;gCACL,iBAAiB;4BACnB;wBACF;qBACD;gBACH;YACF;QACF;IACF;AACF;uCAEe"}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}